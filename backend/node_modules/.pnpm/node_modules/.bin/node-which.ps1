#!/usr/bin/env pwsh
$basedir=Split-Path $MyInvocation.MyCommand.Definition -Parent

$exe=""
$pathsep=":"
$env_node_path=$env:NODE_PATH
<<<<<<< HEAD
$new_node_path="C:\Users\Usuario\Desktop\UTN\Desarrollo de Software\Trabajo_Prueba\Repositorio-TP-Backend\backend\node_modules\.pnpm\which@2.0.2\node_modules\which\bin\node_modules;C:\Users\Usuario\Desktop\UTN\Desarrollo de Software\Trabajo_Prueba\Repositorio-TP-Backend\backend\node_modules\.pnpm\which@2.0.2\node_modules\which\node_modules;C:\Users\Usuario\Desktop\UTN\Desarrollo de Software\Trabajo_Prueba\Repositorio-TP-Backend\backend\node_modules\.pnpm\which@2.0.2\node_modules;C:\Users\Usuario\Desktop\UTN\Desarrollo de Software\Trabajo_Prueba\Repositorio-TP-Backend\backend\node_modules\.pnpm\node_modules;C:\Users\Usuario\Desktop\UTN\Desarrollo de Software\Trabajo_Prueba\Repositorio-TP-Backend\backend\node_modules;C:\Users\Usuario\Desktop\UTN\Desarrollo de Software\Trabajo_Prueba\Repositorio-TP-Backend\node_modules;C:\Users\Usuario\Desktop\UTN\Desarrollo de Software\Trabajo_Prueba\node_modules;C:\Users\Usuario\Desktop\UTN\Desarrollo de Software\node_modules;C:\Users\Usuario\Desktop\UTN\node_modules;C:\Users\Usuario\Desktop\node_modules;C:\Users\Usuario\node_modules;C:\Users\node_modules;C:\node_modules;C:\Users\Usuario\Desktop\UTN\Desarrollo de Software\Trabajo_Prueba\Repositorio-TP-Backend\Backend\node_modules\.pnpm\node_modules"
=======
$new_node_path="C:\Users\Usuario\Desktop\Repositorio-TP-Backend\backend\node_modules\.pnpm\which@2.0.2\node_modules\which\bin\node_modules;C:\Users\Usuario\Desktop\Repositorio-TP-Backend\backend\node_modules\.pnpm\which@2.0.2\node_modules\which\node_modules;C:\Users\Usuario\Desktop\Repositorio-TP-Backend\backend\node_modules\.pnpm\which@2.0.2\node_modules;C:\Users\Usuario\Desktop\Repositorio-TP-Backend\backend\node_modules\.pnpm\node_modules"
>>>>>>> 7abb954d61273918ca411461b942c37bf4d717af
if ($PSVersionTable.PSVersion -lt "6.0" -or $IsWindows) {
  # Fix case when both the Windows and Linux builds of Node
  # are installed in the same directory
  $exe=".exe"
  $pathsep=";"
} else {
<<<<<<< HEAD
  $new_node_path="/mnt/c/Users/Usuario/Desktop/UTN/Desarrollo de Software/Trabajo_Prueba/Repositorio-TP-Backend/backend/node_modules/.pnpm/which@2.0.2/node_modules/which/bin/node_modules:/mnt/c/Users/Usuario/Desktop/UTN/Desarrollo de Software/Trabajo_Prueba/Repositorio-TP-Backend/backend/node_modules/.pnpm/which@2.0.2/node_modules/which/node_modules:/mnt/c/Users/Usuario/Desktop/UTN/Desarrollo de Software/Trabajo_Prueba/Repositorio-TP-Backend/backend/node_modules/.pnpm/which@2.0.2/node_modules:/mnt/c/Users/Usuario/Desktop/UTN/Desarrollo de Software/Trabajo_Prueba/Repositorio-TP-Backend/backend/node_modules/.pnpm/node_modules:/mnt/c/Users/Usuario/Desktop/UTN/Desarrollo de Software/Trabajo_Prueba/Repositorio-TP-Backend/backend/node_modules:/mnt/c/Users/Usuario/Desktop/UTN/Desarrollo de Software/Trabajo_Prueba/Repositorio-TP-Backend/node_modules:/mnt/c/Users/Usuario/Desktop/UTN/Desarrollo de Software/Trabajo_Prueba/node_modules:/mnt/c/Users/Usuario/Desktop/UTN/Desarrollo de Software/node_modules:/mnt/c/Users/Usuario/Desktop/UTN/node_modules:/mnt/c/Users/Usuario/Desktop/node_modules:/mnt/c/Users/Usuario/node_modules:/mnt/c/Users/node_modules:/mnt/c/node_modules:/mnt/c/Users/Usuario/Desktop/UTN/Desarrollo de Software/Trabajo_Prueba/Repositorio-TP-Backend/Backend/node_modules/.pnpm/node_modules"
=======
  $new_node_path="/mnt/c/Users/Usuario/Desktop/Repositorio-TP-Backend/backend/node_modules/.pnpm/which@2.0.2/node_modules/which/bin/node_modules:/mnt/c/Users/Usuario/Desktop/Repositorio-TP-Backend/backend/node_modules/.pnpm/which@2.0.2/node_modules/which/node_modules:/mnt/c/Users/Usuario/Desktop/Repositorio-TP-Backend/backend/node_modules/.pnpm/which@2.0.2/node_modules:/mnt/c/Users/Usuario/Desktop/Repositorio-TP-Backend/backend/node_modules/.pnpm/node_modules"
>>>>>>> 7abb954d61273918ca411461b942c37bf4d717af
}
if ([string]::IsNullOrEmpty($env_node_path)) {
  $env:NODE_PATH=$new_node_path
} else {
  $env:NODE_PATH="$new_node_path$pathsep$env_node_path"
}

$ret=0
if (Test-Path "$basedir/node$exe") {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "$basedir/node$exe"  "$basedir/../which/bin/node-which" $args
  } else {
    & "$basedir/node$exe"  "$basedir/../which/bin/node-which" $args
  }
  $ret=$LASTEXITCODE
} else {
  # Support pipeline input
  if ($MyInvocation.ExpectingInput) {
    $input | & "node$exe"  "$basedir/../which/bin/node-which" $args
  } else {
    & "node$exe"  "$basedir/../which/bin/node-which" $args
  }
  $ret=$LASTEXITCODE
}
$env:NODE_PATH=$env_node_path
exit $ret
